{"meta":{"title":"一蚁","subtitle":"A stray ant can only move by itself","description":"A stray ant can only move by itself","author":"一蚁","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"Hello World","slug":"hello-world","date":"2019-11-03T05:56:18.616Z","updated":"2019-08-04T04:58:49.862Z","comments":true,"path":"2019/11/03/hello-world/","link":"","permalink":"http://yoursite.com/2019/11/03/hello-world/","excerpt":"","text":"就是一个Hello World很高兴自己的个人博客建立成功以此记录自己工作中遇到的问题以此记录自己的学习历程以此记录一蚁的前行 近期会陆陆续续的把自己的笔记都录上来，也算是一次复习欢迎前辈们指正！！！","categories":[],"tags":[],"keywords":[]},{"title":"Maven指令记录","slug":"maven_orders","date":"2019-08-04T05:11:25.000Z","updated":"2019-08-04T06:31:38.197Z","comments":true,"path":"2019/08/04/maven_orders/","link":"","permalink":"http://yoursite.com/2019/08/04/maven_orders/","excerpt":"","text":"基本上使用IDE 进行开发，maven命令都可以直接在开发工具中快捷执行，这就造成了自己根本没有留意过这一块的内容。 install 命令， 将jar包安装到本地仓库别人给了一个jar包， maven仓库中也没有，项目中需要引用，杂么办？install 命令，将jar包安装到本地仓库，然后把本地仓库中的 该jar包install 后的内容复制的内网的公共仓库 1mvn install:install-file -Dfile=F:\\xxxxx.jar -DgroupId=xxx.xxx -DartifactId=xxxx -Dversion=18.8 -Dpackaging=jar 拷贝依赖公司为客户做了一个小工具，打包项目时要求把依赖放入一个文件夹下面，然后找到了下面这个命令 1mvn dependency:copy-dependencies -DoutputDirectory=lib","categories":[{"name":"backGround","slug":"backGround","permalink":"http://yoursite.com/categories/backGround/"},{"name":"Maven","slug":"backGround/Maven","permalink":"http://yoursite.com/categories/backGround/Maven/"}],"tags":[{"name":"Maven","slug":"Maven","permalink":"http://yoursite.com/tags/Maven/"}],"keywords":[{"name":"backGround","slug":"backGround","permalink":"http://yoursite.com/categories/backGround/"},{"name":"Maven","slug":"backGround/Maven","permalink":"http://yoursite.com/categories/backGround/Maven/"}]},{"title":"初识springBoot","slug":"new_springBoot","date":"2019-08-04T05:07:10.000Z","updated":"2019-08-04T05:33:05.247Z","comments":true,"path":"2019/08/04/new_springBoot/","link":"","permalink":"http://yoursite.com/2019/08/04/new_springBoot/","excerpt":"","text":"spring boot 踩坑创建简单的web 项目，只实现web 页面展示，不涉及业务处理 idea 新建项目，采用 Spring Initializr 创建项目， 选择 web 依赖 项目创建成功后创建展示层目录： src/main/webapp,在 webapp下创建目录 WEB-INF ,在WEB-INF 下创建 index.jsp 文件 配置spring boot 启动器 12345678910@SpringBootApplication public class Applicaion extends SpringBootServletInitializer&#123; public static main(String args[])&#123; SpringApplication.run(Applicaion.class, args); &#125; //重写configure 方法 protected SpringApplicationBuilder configure(SpringApplicationBuilder builder)&#123; return builder.sources(Applicaion.class); &#125; &#125; 配置文件设置 ： application.properties 12spring.mvc.view.perfix=/WEB-INF/ spring.mvc.view.suffix=.jsp 添加jsp 支持， 如果需要使用EL 表达式， 再添加JSTL 支持，打开pom.xml文件 123456789&lt;dependency&gt;&lt;!-- jsp 支持 --&gt; &lt;groupId&gt;org.apache.tomcat.embed&lt;/groupId&gt; &lt;artifactId&gt;tomcat-embed-jasper&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;!-- jstl 支持 --&gt; &lt;groupId&gt;javax.servlet&lt;/groupId&gt; &lt;artifactId&gt;jstl&lt;/artifactId&gt; &lt;/dependency&gt; 添加一个 Controller , 注意所在的目录 import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RestController; import org.springframework.web.servlet.ModelAndView; @RestController public class LoginController { @RequestMapping(value ={ \"/\", \"/index\"}) public ModelAndView index(){ ModelAndView view = new ModelAndView(\"index\"); return view; } } @RestController 与 @Controller 之间的不同 @RestController 相当于 @RequestMapping 和 @ResponseBody 结合， 方法返回值为 String 返回单纯的字符串， 方法返回值为 ModelAndView 为一个页面 @Controller 方法返回值为 String 返回一个页面， 方法返回值为 ModelAndView 为一个页面， 返回对象需要在方法上添加@ResponseBody注解 @RequestMapping 路径匹配，可在类，方法上添加;一个方法匹配多个路径 {“/index”, “/login” } ,使用大括号括起来;中间用逗号隔开。","categories":[{"name":"springBoot","slug":"springBoot","permalink":"http://yoursite.com/categories/springBoot/"}],"tags":[{"name":"backGround","slug":"backGround","permalink":"http://yoursite.com/tags/backGround/"},{"name":"springBoot","slug":"springBoot","permalink":"http://yoursite.com/tags/springBoot/"}],"keywords":[{"name":"springBoot","slug":"springBoot","permalink":"http://yoursite.com/categories/springBoot/"}]},{"title":"【javaSE】","slug":"jav_se","date":"2019-08-04T05:04:46.000Z","updated":"2019-08-04T05:33:04.972Z","comments":true,"path":"2019/08/04/jav_se/","link":"","permalink":"http://yoursite.com/2019/08/04/jav_se/","excerpt":"","text":"将list集合转化为js 可以遍历的json 对象 1JSONArray.toJSON(prjCategoryInfoList)","categories":[{"name":"backGround","slug":"backGround","permalink":"http://yoursite.com/categories/backGround/"},{"name":"javaSE","slug":"backGround/javaSE","permalink":"http://yoursite.com/categories/backGround/javaSE/"}],"tags":[{"name":"java","slug":"java","permalink":"http://yoursite.com/tags/java/"}],"keywords":[{"name":"backGround","slug":"backGround","permalink":"http://yoursite.com/categories/backGround/"},{"name":"javaSE","slug":"backGround/javaSE","permalink":"http://yoursite.com/categories/backGround/javaSE/"}]},{"title":"EL表达式不起作用问题排查","slug":"el_error","date":"2019-08-04T04:49:39.000Z","updated":"2019-08-04T05:33:05.202Z","comments":true,"path":"2019/08/04/el_error/","link":"","permalink":"http://yoursite.com/2019/08/04/el_error/","excerpt":"","text":"EL 表达式 &lt;%@ page isELIgnored=”true | false”%&gt; 用于指定el 表达式是否被忽略 web.xml中 :web-app_2_4.xsd”&gt;默认为 false,表示启用2.4之前的版本默认为true,表示忽略EL 表达式. 所以老版本的web-app 尽早改了吧","categories":[{"name":"backGround","slug":"backGround","permalink":"http://yoursite.com/categories/backGround/"},{"name":"jsp","slug":"backGround/jsp","permalink":"http://yoursite.com/categories/backGround/jsp/"}],"tags":[{"name":"jsp","slug":"jsp","permalink":"http://yoursite.com/tags/jsp/"}],"keywords":[{"name":"backGround","slug":"backGround","permalink":"http://yoursite.com/categories/backGround/"},{"name":"jsp","slug":"backGround/jsp","permalink":"http://yoursite.com/categories/backGround/jsp/"}]},{"title":"文件下载中文名称乱码问题","slug":"downFile_chinese","date":"2019-08-04T04:45:37.000Z","updated":"2019-08-04T05:33:04.923Z","comments":true,"path":"2019/08/04/downFile_chinese/","link":"","permalink":"http://yoursite.com/2019/08/04/downFile_chinese/","excerpt":"","text":"12345678910111213141516171819/** * 设置文件名响应头 * @param response response * @param request request * @param fileName 文件名 * @throws UnsupportedEncodingException */ private void setFileNameToResponse(HttpServletResponse response, HttpServletRequest request, String fileName) throws UnsupportedEncodingException &#123; if (fileName != null)&#123; String userAgent = request.getHeader(\"User-Agent\").toLowerCase(); if(userAgent.contains(\"msie\") || userAgent.contains(\"trident\") || userAgent.contains(\"edge\"))&#123; fileName = URLEncoder.encode(fileName, \"UTF-8\"); fileName=fileName.replaceAll(\"\\\\+\",\"%20\");//处理空格展示成加号的问题 &#125;else&#123; fileName = new String(fileName.getBytes(),\"ISO8859-1\"); &#125; response.setHeader(\"Content-disposition\", String.format(\"attachment; filename=\\\"%s\\\"\", fileName)); &#125; &#125;","categories":[{"name":"backGround","slug":"backGround","permalink":"http://yoursite.com/categories/backGround/"},{"name":"文件下载","slug":"backGround/文件下载","permalink":"http://yoursite.com/categories/backGround/文件下载/"}],"tags":[{"name":"spring","slug":"spring","permalink":"http://yoursite.com/tags/spring/"}],"keywords":[{"name":"backGround","slug":"backGround","permalink":"http://yoursite.com/categories/backGround/"},{"name":"文件下载","slug":"backGround/文件下载","permalink":"http://yoursite.com/categories/backGround/文件下载/"}]},{"title":"【MySQL】事务没有提交导致锁等待","slug":"mysql_transations","date":"2019-08-04T04:34:08.000Z","updated":"2019-08-04T05:33:05.350Z","comments":true,"path":"2019/08/04/mysql_transations/","link":"","permalink":"http://yoursite.com/2019/08/04/mysql_transations/","excerpt":"","text":"【MySQL】事务没有提交导致 锁等待 Lock wait timeout exceeded异常的处理办法1select * from information_schema.innodb_trx; 之后找到了一个一直没有提交的事务。 kill 到了对应的线程后ok了。 查看所有的进程列表： 1show processlist;","categories":[{"name":"backGround","slug":"backGround","permalink":"http://yoursite.com/categories/backGround/"},{"name":"MySQL","slug":"backGround/MySQL","permalink":"http://yoursite.com/categories/backGround/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://yoursite.com/tags/MySQL/"}],"keywords":[{"name":"backGround","slug":"backGround","permalink":"http://yoursite.com/categories/backGround/"},{"name":"MySQL","slug":"backGround/MySQL","permalink":"http://yoursite.com/categories/backGround/MySQL/"}]},{"title":"linux服务器tomcat启动但浏览器访问不了","slug":"toStartTomcat","date":"2019-08-04T04:31:28.000Z","updated":"2019-08-04T05:33:04.869Z","comments":true,"path":"2019/08/04/toStartTomcat/","link":"","permalink":"http://yoursite.com/2019/08/04/toStartTomcat/","excerpt":"","text":"首先服务器是阿里云云服务器tomcat是成功启动，但是浏览器就是打不开， tomcat日志也没问题，firewalld里8080端口号也加了。服务器的实例，添加一组入方向的安全组规则(协议类型:自定义TCP端口范围:22/8081 授权类型:地址段访问 授权对象:0.0.0.0/0 )，然后浏览器刷新","categories":[{"name":"backGround","slug":"backGround","permalink":"http://yoursite.com/categories/backGround/"},{"name":"linux","slug":"backGround/linux","permalink":"http://yoursite.com/categories/backGround/linux/"},{"name":"tomcat","slug":"backGround/linux/tomcat","permalink":"http://yoursite.com/categories/backGround/linux/tomcat/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://yoursite.com/tags/linux/"},{"name":"tomcat","slug":"tomcat","permalink":"http://yoursite.com/tags/tomcat/"}],"keywords":[{"name":"backGround","slug":"backGround","permalink":"http://yoursite.com/categories/backGround/"},{"name":"linux","slug":"backGround/linux","permalink":"http://yoursite.com/categories/backGround/linux/"},{"name":"tomcat","slug":"backGround/linux/tomcat","permalink":"http://yoursite.com/categories/backGround/linux/tomcat/"}]},{"title":"idea加快创建Maven项目速度","slug":"idea_create_maven","date":"2019-08-04T04:29:19.000Z","updated":"2019-08-04T05:33:05.159Z","comments":true,"path":"2019/08/04/idea_create_maven/","link":"","permalink":"http://yoursite.com/2019/08/04/idea_create_maven/","excerpt":"","text":"Intellij Idea 创建maven项目 配置参数，提高创建速度archetypeCatalog=internal idea 开发工具:is 开头的boolean类型参数,更改get /set 方法的方法名, 避免造成参数名与实际获取的参数名不一致问题 注：貌似eclipse 也有相同的问题吧？","categories":[{"name":"backGround","slug":"backGround","permalink":"http://yoursite.com/categories/backGround/"},{"name":"idea","slug":"backGround/idea","permalink":"http://yoursite.com/categories/backGround/idea/"},{"name":"Maven","slug":"backGround/idea/Maven","permalink":"http://yoursite.com/categories/backGround/idea/Maven/"}],"tags":[{"name":"idea","slug":"idea","permalink":"http://yoursite.com/tags/idea/"},{"name":"maven","slug":"maven","permalink":"http://yoursite.com/tags/maven/"}],"keywords":[{"name":"backGround","slug":"backGround","permalink":"http://yoursite.com/categories/backGround/"},{"name":"idea","slug":"backGround/idea","permalink":"http://yoursite.com/categories/backGround/idea/"},{"name":"Maven","slug":"backGround/idea/Maven","permalink":"http://yoursite.com/categories/backGround/idea/Maven/"}]},{"title":"前端js常见问题","slug":"js_faults","date":"2019-08-04T04:20:45.000Z","updated":"2019-08-04T05:33:05.302Z","comments":true,"path":"2019/08/04/js_faults/","link":"","permalink":"http://yoursite.com/2019/08/04/js_faults/","excerpt":"","text":"textareatextarea的text属性与value属性注意区分，发送到服务器的是value值 select标签select标签通过js生成的option设置默认选中状态必须在生成的过程中进行设置，在生成后设置:$(“select””).val() 和$(“select””).find(“option[value=”+yes+”]””).attr(“selected””,”selected””)都不会生效；input 标签不填任何内容值为 “” 前端js 代码中遍历 key:value结构数据 123for(var key in obj)&#123; // key为map集合中的每个元素的key var value = obj[key] // value 为对应key 对应的value&#125; 遍历json 对象 与遍历map相同 123for(var item in person)&#123;alert(\"person中\"+item+\"的值=\"+person[item]);&#125; 数组删除指定元素的方法方法一： 1234567891011121314//定义删除方法Array.prototype.remove = function(val) &#123; var index = this.indexOf(val); if (index &gt; -1) &#123; this.splice(index, 1); &#125;&#125;;// 定义查询下标的方法 Array.prototype.indexOf = function(val) &#123; for (var i = 0; i &lt; this.length; i++) &#123; if (this[i] == val) return i; &#125; return -1;&#125;; 方法二：array 表示数组，item表示数组中的元素,$.inArray 获取item在array 中的下标，splice(index, num)表示从index位置开始删除num个元素 1array.splice($.inArray(item, array), 1); 复制一个对象中的数据到新的对象中1$.extend(newData, oldData);","categories":[{"name":"forward","slug":"forward","permalink":"http://yoursite.com/categories/forward/"},{"name":"js","slug":"forward/js","permalink":"http://yoursite.com/categories/forward/js/"},{"name":"jQuery","slug":"forward/js/jQuery","permalink":"http://yoursite.com/categories/forward/js/jQuery/"}],"tags":[{"name":"jQuery","slug":"jQuery","permalink":"http://yoursite.com/tags/jQuery/"},{"name":"js","slug":"js","permalink":"http://yoursite.com/tags/js/"}],"keywords":[{"name":"forward","slug":"forward","permalink":"http://yoursite.com/categories/forward/"},{"name":"js","slug":"forward/js","permalink":"http://yoursite.com/categories/forward/js/"},{"name":"jQuery","slug":"forward/js/jQuery","permalink":"http://yoursite.com/categories/forward/js/jQuery/"}]},{"title":"mybatis采坑","slug":"mybatis_faults","date":"2019-08-04T04:08:06.000Z","updated":"2019-08-04T05:33:04.833Z","comments":true,"path":"2019/08/04/mybatis_faults/","link":"","permalink":"http://yoursite.com/2019/08/04/mybatis_faults/","excerpt":"","text":"mybatis 获取主键自增长两个属性：useGeneratedKeys 和 keyProperty ，获得的主键直接赋值到插入的对象中，通过插入的对象获取自增的主键 mabatis 多个参数的查询Dao 层使用@Param 注解，xml配置文件中不需要再使用parameterType 属性mybatis 中desc 经常作为description 的缩写使用，查询数据时引发错误，在desc两端添加反引号(数字1 前的那个键)可以解决问题 mybatis 批量插入案例：1234567891011&lt;insert id=\"insertBatch\" parameterType=\"java.util.List\"&gt; INSERT INTO s_data_role_permission (id, dataRoleId, dataTypeId, dataDepts, createUser, createTime ) VALUES &lt;foreach collection=\"list\" item=\"item\" index=\"index\" separator=\",\"&gt; (#&#123;item.id,jdbcType=INTEGER&#125;, #&#123;item.dataRoleId,jdbcType=INTEGER&#125;, #&#123;item.dataTypeId,jdbcType=INTEGER&#125;, #&#123;item.dataDepts,jdbcType=VARCHAR&#125;, #&#123;item.createUser,jdbcType=VARCHAR&#125;, #&#123;item.createTime,jdbcType=TIMESTAMP&#125; ) &lt;/foreach&gt; &lt;/insert&gt; mybatis 批量查询案例：123456&lt;select id=\"selectDeptTreeByIds\" resultType=\"com.instant.ipms.model.vo.web.sys.dept.DeptTree\"&gt; SELECT id, parentId, name as text FROM s_dept WHERE id IN &lt;foreach collection=\"list\" open=\"(\" close=\")\" index=\"index\" separator=\",\" item=\"item\"&gt;#&#123;item&#125;&lt;/foreach&gt;&lt;/select&gt; mybatis 批量更新案例：1234567891011121314&lt;update id=\"updateBatch\" parameterType=\"java.util.List\"&gt; update prj_stage &lt;trim prefix=\"set\" suffixOverrides=\",\"&gt; &lt;trim prefix=\"sort =case\" suffix=\"end,\"&gt; &lt;foreach collection=\"list\" item=\"item\" index=\"index\"&gt; when id=#&#123;item.id&#125; then #&#123;item.sort&#125; &lt;/foreach&gt; &lt;/trim&gt; &lt;/trim&gt; where id in &lt;foreach collection=\"list\" index=\"index\" item=\"item\" separator=\",\" open=\"(\" close=\")\"&gt; #&#123;item.id,jdbcType=INTEGER&#125; &lt;/foreach&gt;&lt;/update&gt; org.apache.ibatis.reflection.ReflectionExceptionThere is no getter for property named ‘keyword’ in ‘class java.lang.String’这样的错误解决方法 将string类型换成map类型的，然后将该keyword 放入该map中，不会报错 在接口中使用@Param(value=”xxx”) String xxx,例如：public List fuzzyFind(@Param(value = “keyword”) String keyword);同时将配置文件中的paramType 去除，也可以解决问题 在配置文件中直接将keyword换成_parameter，问题解决。 12345678&lt;select id=\"fuzzyFind\" resultMap=\"articleResultMap\" parameterType=\"string\"&gt; &lt;![CDATA[ SELECT * FROM articles WHERE 1=1 ]]&gt; &lt;if test=\"_parameter != null\"&gt; &lt;![CDATA[ AND article_title LIKE CONCAT('%','$&#123;_parameter&#125;','%') ]]&gt; &lt;/if&gt;&lt;/select&gt;","categories":[{"name":"backGround","slug":"backGround","permalink":"http://yoursite.com/categories/backGround/"},{"name":"mybatis","slug":"backGround/mybatis","permalink":"http://yoursite.com/categories/backGround/mybatis/"}],"tags":[{"name":"mybatis","slug":"mybatis","permalink":"http://yoursite.com/tags/mybatis/"}],"keywords":[{"name":"backGround","slug":"backGround","permalink":"http://yoursite.com/categories/backGround/"},{"name":"mybatis","slug":"backGround/mybatis","permalink":"http://yoursite.com/categories/backGround/mybatis/"}]}]}